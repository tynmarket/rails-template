name: "CI and Deploy to ECS"
on:
  push:
    branches:
      - master
jobs:
  ci_workflow:
    uses: ./.github/workflows/ci.yml
  deploy:
    runs-on: ubuntu-latest
    needs: ci_workflow
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDCRole

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build rails-temaplte container
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: rails-template
          IMAGE_TAG: latest
        run: |
          docker build -f Dockerfile.prod -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build nginx container
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: nginx
          IMAGE_TAG: latest
        run: |
          docker build -f Dockerfile.prod -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Checkout ecspresso
        uses: kayac/ecspresso@v2
        with:
          version: latest

      - name: ecspresso diff
        run: |
          ecspresso diff

      - name: ecspresso verify
        run: |
          ecspresso verify

      - name: ecspresso deploy
        run: |
          ecspresso deploy
