{
  "containerDefinitions": [
    {
      "cpu": 0,
      "environment": [
        {
          "name": "DB_USERNAME",
          "value": "{{ ssm `db_username` }}"
        },
        {
          "name": "DB_NAME",
          "value": "{{ ssm `db_name` }}"
        },
        {
          "name": "DB_PASSWORD",
          "value": "{{ ssm `db_password` }}"
        },
        {
          "name": "RAILS_MASTER_KEY",
          "value": "{{ must_env `RAILS_MASTER_KEY_RAILS_TEMPLATE` }}"
        },
        {
          "name": "DB_HOST",
          "value": "{{ ssm `db_host` }}"
        }
      ],
      "essential": true,
      "image": "{{ must_env `AWS_ACCOUNT_ID` }}.dkr.ecr.ap-northeast-1.amazonaws.com/rails-template:latest",
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/rails-template",
          "awslogs-region": "ap-northeast-1",
          "awslogs-stream-prefix": "web"
        }
      },
      "name": "web"
    },
    {
      "cpu": 0,
      "essential": false,
      "image": "{{ must_env `AWS_ACCOUNT_ID` }}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx:latest",
      "logConfiguration": {
        "logDriver": "awslogs",
        "options": {
          "awslogs-create-group": "true",
          "awslogs-group": "/ecs/rails-template",
          "awslogs-region": "ap-northeast-1",
          "awslogs-stream-prefix": "nginx"
        }
      },
      "name": "nginx",
      "portMappings": [
        {
          "appProtocol": "",
          "containerPort": 80,
          "hostPort": 80,
          "name": "nginx-80-tcp",
          "protocol": "tcp"
        }
      ],
      "volumesFrom": [
        {
          "readOnly": false,
          "sourceContainer": "web"
        }
      ]
    }
  ],
  "cpu": "256",
  "executionRoleArn": "arn:aws:iam::{{ must_env `AWS_ACCOUNT_ID` }}:role/ecsTaskExecutionRole",
  "family": "rails-template",
  "ipcMode": "",
  "memory": "512",
  "networkMode": "awsvpc",
  "pidMode": "",
  "requiresCompatibilities": [
    "FARGATE"
  ],
  "runtimePlatform": {
    "cpuArchitecture": "ARM64",
    "operatingSystemFamily": "LINUX"
  }
}
